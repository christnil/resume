{"version":3,"sources":["app/experience/experience-role.js","app/experience/experience-list-item.js","app/experience/experience-list.js","app/personal/personal.js","app/skills/skill.js","app/skills/skills.js","data/experience/belivia/sv.js","data/experience/ip-only/sv.js","data/experience/kemikalieinspektionen/sv.js","data/experience/scania/sv.js","data/experience/scania-infomate/sv.js","data/experience/thomas-cook/sv.js","data/experience/sv.js","data/experience/belivia/en.js","data/experience/ip-only/en.js","data/experience/thomas-cook/en.js","data/experience/en.js","data/experience/index.js","data/personal/en.js","data/personal/index.js","data/education/en.js","data/education/index.js","data/index.js","app/education/education-entry.js","app/education/education-list.js","app/index.js","reportWebVitals.js","index.js"],"names":["ExperienceRole","role","className","name","description","Array","isArray","map","paragraph","index","ExperienceListItem","experience","labels","customerName","projectName","from","to","onGoing","customerDescription","projectDescription","roles","length","keywords","keyword","ExperienceList","experiences","rest","Personal","personal","professional","favoriteProject","Skill","category","skill","skillList","Object","keys","key","value","sort","a","b","Skills","categories","categoryList","forEach","push","involvement","usage","cat","industry","list","belivia","ipOnly","chemicalInspection","scania","scaniaInfomate","thomasCook","title","mapAndSortList","project","score","sv","en","institute","skills","education","EducationEntry","entry","EducationList","Resume","href","target","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.784a2764.chunk.js","sourcesContent":["import React from 'react'\n\nimport './experience-role.css';\n\nconst ExperienceRole = function({ role }) {\n  return (\n    <div className=\"role\">\n      <div className=\"role__name\">{role.name}</div>\n      <div className=\"role__description\">\n        {typeof role.description === 'string' && <p className=\"role__description-paragraph\">{role.description}</p>}\n        {Array.isArray(role.description) && role.description.map((paragraph, index) => (\n          <p className=\"role__description-paragraph\" key={index}>{paragraph}</p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ExperienceRole;\n","import React from 'react'\n\nimport './experience-list-item.css';\nimport ExperienceRole from \"./experience-role\";\n\nconst ExperienceListItem = function({ experience, labels }) {\n  return (\n    <div className=\"experience\">\n      <div className=\"experience__title\">\n        <div className=\"experience__customer-name\">{experience.customerName}</div>\n        {!!experience.projectName && <div className=\"experience__project-name\">{experience.projectName}</div>}\n      </div>\n      <div className=\"experience__duration\">\n        <div className=\"experience__from\">{experience.from}</div>\n        {!!(experience.to || labels.onGoing) && <div className=\"experience__to\">{experience.to || labels.onGoing}</div>}\n      </div>\n      {!!experience.customerDescription && (\n        <p className=\"experience__customer-description\">\n          {experience.customerDescription}\n        </p>\n      )}\n      {!!experience.projectDescription && (\n        <p className=\"experience__project-description\">\n          {experience.projectDescription}\n        </p>\n      )}\n      {!!experience.roles && experience.roles.length > 0 && (\n        <div className=\"experience__roles\">\n          {experience.roles.map(role => (\n            <div className=\"experience__role\" key={role.name}>\n              <ExperienceRole role={role} />\n            </div>\n          ))}\n        </div>\n      )}\n      {!!experience.keywords && experience.keywords.length > 0 && (\n        <div className=\"experience__keywords\">\n          {experience.keywords.map(keyword => (\n            <div\n              className=\"experience__keyword\"\n              key={keyword.name}>\n              {keyword.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExperienceListItem;\n","import React from 'react'\nimport ExperienceListItem from \"./experience-list-item\";\n\nconst ExperienceList = function({ experiences, ...rest }) {\n  return (\n    <div className=\"experience-list\">\n      {experiences.map(experience => (\n        <div className=\"experience-list__item\" key={`${experience.customerName} - ${experience.projectName}`}>\n          <ExperienceListItem experience={experience} {...rest} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ExperienceList;\n","import React from 'react'\n\nimport './personal.css';\n\nconst Personal = function({ personal }) {\n  return (\n    <div className=\"personal\">\n      <h1 className=\"name\">{personal.name}</h1>\n      <p>{personal.personal}</p>\n      <p>{personal.professional}</p>\n      <p>{personal.favoriteProject}</p>\n    </div>\n  );\n};\n\nexport default Personal;\n","import React from 'react';\n\nimport './skill.css';\n\nconst Skill = function({ category, skill }) {\n  const skillList = Object.keys(skill)\n    .map(key => ({ name: key, value: skill[key] }))\n    .sort((a, b) => {\n      if (a.value < b.value) {\n        return 1;\n      }\n      if (a.value > b.value) {\n        return -1;\n      }\n      if (a.name < b.name) {\n        return 1;\n      }\n      if (a.name > b.name) {\n        return -1;\n      }\n      return 0;\n    })\n\n  return (\n    <div className=\"skill\">\n      <div className=\"skill__name\">{category}</div>\n      <div className=\"skill__list\">\n        {skillList.map(skill => (\n          <div className=\"skill__entry\">{skill.name}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Skill;\n","import React from 'react';\nimport Skill from \"./skill\";\n\nimport './skills.css';\n\nconst Skills = function({ experiences }) {\n  const categories = {};\n  const categoryList = [];\n  experiences.forEach(experience => {\n    experience.keywords.forEach(skill => {\n      if (!categories[skill.category]) {\n        categories[skill.category] = {};\n        categoryList.push(skill.category);\n      }\n      if (!categories[skill.category][skill.name] || categories[skill.category][skill.name] < (skill.involvement * skill.usage)) {\n        categories[skill.category][skill.name] = (skill.involvement * skill.usage);\n      }\n    })\n  });\n  return (\n    <div className=\"skills\">\n      {categoryList.sort().map(cat => (\n        <Skill category={cat} skill={categories[cat]} key={cat} />\n      ))}\n    </div>\n  );\n};\n\nexport default Skills;\n","export const from = '2014-11-01';\n\nexport const to = '2014-12-31';\n\nexport const customerName = 'Belivia';\n\nexport const customerDescription = 'Belivia är ett företag som sysslar med riskbedömning inom försäkringsbranschen. En del av deras produkt är en elektronisk hälsodeklaration. Hälsodeklarationen kan skräddarsys för olika försäkringstyper genom att försäkringsbolaget kan generera och ladda upp olika manus som sedan dynamiskt renderas för användaren till att visa rätt följdfrågor beroende på svar.';\n\nexport const industry = 'Försäkring';\n\nexport const projectName = 'Ehälsa';\n\nexport const projectDescription = 'För att sälja hälsodeklarationen som en integrerad komponent till ett stort svenskt försäkringsbolag beslutades det att bygga om produkten från PHP till .NET.';\n\nexport const roles = [\n  {\n    name: 'Systemutvecklare',\n    description: [\n      'Christoffer var en av två utvecklare i projektet och var med på alla delar i projektet. Bland annat så integrerades produkten med ett försäkringsbolags miljö och man byggde en integration mot bankId för signering. Det var även viktigt med säkerhet i produkten då den behandlar en stor mängd personuppgifter. Man hade bland annat en granskning med en extern expert på IT-säkerhet.',\n      'Produkten levererades på utsatt tid som ett internt system hos försäkringsbolaget för att automatisera deras tidigare system som använde utskickade generiska pappersblanketter.',\n    ]\n  },\n];\n\nexport const keywords = [\n  { name: 'React', involvement: 5, usage: 5 },\n  { name: 'Node', involvement: 5, usage: 5 },\n  { name: 'Redux', involvement: 5, usage: 5 },\n  { name: 'Redux-saga', involvement: 5, usage: 5 },\n  { name: 'Express', involvement: 5, usage: 5 },\n  { name: 'GraphQL', involvement: 5, usage: 4 },\n  { name: 'Apollo-client', involvement: 5, usage: 4 },\n  { name: 'Jenkins', involvement: 5, usage: 5 },\n  { name: 'Kibana', involvement: 5, usage: 5 },\n  { name: 'Elasticsearch', involvement: 5, usage: 5 },\n  { name: 'MS SQL', involvement: 3, usage: 3 },\n  { name: 'Redis', involvement: 3, usage: 3 },\n  { name: 'RabbitMQ', involvement: 3, usage: 3 },\n  { name: 'TFS', involvement: 3, usage: 3 },\n  { name: '.Net', involvement: 5, usage: 5 },\n  { name: 'C#', involvement: 5, usage: 5 },\n  { name: 'Github', involvement: 5, usage: 5 },\n  { name: 'Bankid', involvement: 4, usage: 3 },\n];","export const from = '2018-12-01';\n\nexport const to = null;\n\nexport const customerName = 'Global Connect/IP-Only';\n\nexport const industry = 'Infrastruktur';\n\nexport const projectName = 'Digitalisering';\n\nexport const customerDescription = 'Global Connect/IP-Only bygger och driver ett av Sveriges största öppna och neutrala fibernät. Deras affärsidé är att möjliggöra digitaliseringen genom att äga, utveckla och erbjuda den bästa infrastrukturen och närliggande tjänster för det digitala hållbara samhället.';\n\nexport const projectDescription = 'Projektet var en del i att bygga ett större IT-stöd för de viktigaste processerna inom företaget. De kanske två främsta försäljning och leverans. Christoffer var en del i projectet att bygga ett nytt säljsystem med pland annat en ny produktkatalog, beställningsportal för kunder och en större integration med leverans. En del i projektet är att väva in system som tagits över från ett annat bolag samt ersätta vissa av dessa med egna system som passar bättre in i teknikstacken på IP-Only.';\n\nexport const roles = [\n  {\n    name: 'Systemutvecklare .NET',\n    description: 'Christoffer startade projektet som ansvarig för de .Net system som hade tagits över. Han arbetade med en del nyutvekling i systemen samt med att hitta bra ställen ersätta med nya microtjänster. Det mest utmanande med detta var att sätta sig in i de befintliga systemen som saknade dokumentation och det saknades kunskap på systemen.',\n  },\n  {\n    name: 'Systemutvecklare Java',\n    description: 'Längre in i projektet så gick rollen mer och mer över till att utveckla nya system i Java för att bygga bort delar av .Net systemen. Anledningen att man valde att göra detta var att de köpta systemen var monolitiska och föråldrade. Därför arbetade man med att bygga nya microtjänster i Java som är den arkitekturen som är etablerad op IP-Only i övrigt. Utmaningen med detta låg  i att hitta sätt att leverera nytt värde för användarna samtidigt som man bröt loss moduler i Java.',\n  },\n];\n\nexport const keywords = [\n  { name: 'Java', involvement: 5, usage: 5 },\n  { name: 'Spring Boot', involvement: 5, usage: 5 },\n  { name: 'Docker Swarm', involvement: 2, usage: 5 },\n  { name: '.Net', involvement: 5, usage: 3 },\n  { name: 'C#', involvement: 5, usage: 3 },\n  { name: 'Octopus', involvement: 3, usage: 1 },\n  { name: 'Gitlab', involvement: 4, usage: 5 },\n  { name: 'Teamcity', involvement: 3, usage: 1 },\n  { name: 'MariaDB', involvement: 3, usage: 5 },\n  { name: 'MS SQL', involvement: 4, usage: 4 },\n  { name: 'Kibana', involvement: 4, usage: 4 },\n  { name: 'Elasticsearch', involvement: 4, usage: 4 },\n  { name: 'Grafana', involvement: 3, usage: 3 },\n  { name: 'AngularJS', involvement: 3, usage: 5 },\n  { name: 'Nginx', involvement: 3, usage: 5 },\n  { name: 'ArchiMate', involvement: 3, usage: 5 },\n  { name: 'Archi', involvement: 3, usage: 5 },\n  { name: 'RabbitMQ', involvement: 4, usage: 5 },\n  { name: 'IntelliJ', involvement: 4, usage: 5 },\n  { name: 'DataGrip', involvement: 4, usage: 5 },\n];","export const from = '2013-04-01';\n\nexport const to = '2013-09-30';\n\nexport const customerName = 'Kemikalieinspektionen';\n\nexport const customerDescription = 'Kemikalieinspektionen är en statlig myndighet som ansvarar för att kontrollera företag som tillverkar och importerar kemiska produkter. Deras huvudsakliga uppdrag är att skydda människor och miljö från farliga ämnen. Kemikalieinspektionen har cirka 250 anställda runt om i Sverige.';\n\nexport const industry = null;\n\nexport const projectName = null;\n\nexport const projectDescription = 'För att effektivisera sitt arbete samt modernisera sin databas utvecklade Kemikalieinspektionen en ny internwebb för hantering av ämnen, produkter och beslut. Christoffer var ansvarig för att implementera funktionalitet för att underhålla basdata i systemet. Med basdata menas grunddata för resten av systemet, till exempel länder och roller. Systemet var känsligt för ändringar i dessa data så endast administratörer skulle ha möjlighet att göra ändringar och alla ändringar skulle loggas i systemet. För loggningen användes ”Self tracking entities” som är objekt som själva håller reda på eventuella ändringar. Det resulterade i en implementation för loggning som gjorde det enkelt att utöka detta till nya komponenter senare i projektet.';\n\nexport const roles = [\n  {\n    name: 'Systemutvecklare',\n    description: 'För att effektivisera sitt arbete samt modernisera sin databas utvecklade Kemikalieinspektionen en ny internwebb för hantering av ämnen, produkter och beslut.\\n' +\n      'Christoffer var ansvarig för att implementera funktionalitet för att underhålla basdata i systemet. Med basdata menas grunddata för resten av systemet, till exempel länder och roller. Systemet var känsligt för ändringar i dessa data så endast administratörer skulle ha möjlighet att göra ändringar och alla ändringar skulle loggas i systemet.\\n' +\n      'För loggningen användes ”Self tracking entities” som är objekt som själva håller reda på eventuella ändringar. Det resulterade i en implementation för loggning som gjorde det enkelt att utöka detta till nya komponenter senare i projektet.',\n  },\n];\n\nexport const keywords = [\n  { name: 'Bootstrap', involvement: 2, usage: 3 },\n  { name: 'Less', involvement: 2, usage: 3 },\n  { name: 'Knockout', involvement: 2, usage: 3 },\n  { name: '.Net', involvement: 3, usage: 4 },\n  { name: 'MVC', involvement: 3, usage: 3 },\n  { name: 'MS SQL', involvement: 3, usage: 3 },\n  { name: 'Entity Framework', involvement: 3, usage: 4 },\n  { name: 'Microsoft Visual Studio', involvement: 3, usage: 4 },\n  { name: 'Microsoft SQL Management Studio', involvement: 3, usage: 3 },\n  { name: 'Subversion', involvement: 3, usage: 3 },\n];\n","export const from = '2012-04-01';\n\nexport const to = '2012-09-30';\n\nexport const customerName = 'Scania';\n\nexport const customerDescription = 'Scania är ett internationellt företag som konstruerar och producerar lastbilar. Scania utvecklar även mjukvara som styr till exempel växellåda och motor för att sänka bränsleförbrukningen i bilarna genom att ta bort den mänskliga faktorn vid körning. I och med att allt mer i bilen styrs av mjukvara så är det viktigt att kunna testa denna på ett bra sätt. ';\n\nexport const industry = null;\n\nexport const projectName = null;\n\nexport const projectDescription = [\n  'För att göra detta loggas sensorvärden och styrsignalerna i bilarna, tillexempel vilken växel, hastighet, lutning på vägen. Dessa signaler analyseras sedan av domänexperter genom att plotta olika signaler parallellt och eventuella fel kan identifieras. För att genomföra analysen har Scania utvecklat ett eget verktyg i en .Net applikation som kan användas för att plotta data som loggas i realtid i bilen.',\n  'Christoffer var under sin tid på Scania ansvarig för att vidareutveckla denna applikation för att kunna öppna och analysera historisk data, lägga till stöd för att analysera fler signaler samtidigt samt att kunna välja vilka signaler som är synliga i plotten på ett enkelt sätt.',\n  'Resultatet blev en applikation som kunde läsa och hantera stora mängder data och även en funktion för att söka efter händelser i signaler, t ex hitta alla uppväxlingar.',\n];\n\nexport const roles = [\n  {\n    name: 'Systemutvecklare',\n    description: '',\n  },\n];\n\nexport const keywords = [\n  { name: '.Net', involvement: 3, usage: 4 },\n  { name: 'Windows Forms', involvement: 3, usage: 4 },\n  { name: 'Microsoft Visual Studio', involvement: 3, usage: 4 }\n];\n","export const from = '2011-04-01';\n\nexport const to = '2011-09-30';\n\nexport const customerName = 'Scania Infomate';\n\nexport const customerDescription = 'Scania Infomate är ett svenskt företag som är ägt av Scania och tillhandahåller och underhåller IT-lösningar med Scania som kund.';\n\nexport const industry = null;\n\nexport const projectName = null;\n\nexport const projectDescription = [\n  'Det är viktigt att samarbetet mellan Scania Infomate och Scania fungerar på bästa möjliga sätt. Scania Infomate ville därför utveckla ett eget verktyg för att skapa, distribuera och analysera resultatet av enkäter för att på ett snabbt och enkelt sätt ta reda på vad kunder och användare inom Scania tycker om levererade produkter.',\n  'Christoffer var under sin tid på Infomate ansvarig för att skapa detta verktyg för enkäter. Han arbetade som enda utvecklare på projektet och ansvarade för kravställning, arkitektur och implementation. Verktyget var helt fristående från andra verktyg på Scania med undantag av AD-inloggning.',\n  'Resultatet blev en webbapplikation skriven i C# .Net och ASPX med ett administratörgränssnitt, ett gränssnitt för enkätägare och ett användargränssnitt där behöriga användare kunde delta i enkäter.',\n];\n\nexport const roles = [\n  {\n    name: 'Systemutvecklare',\n    description: '',\n  },\n];\n\nexport const keywords = [\n  { name: '.Net', involvement: 3, usage: 3 },\n  { name: 'ASP.NET', involvement: 3, usage: 3 },\n  { name: 'C#', involvement: 3, usage: 3 },\n  { name: 'Javascript', involvement: 3, usage: 3 },\n  { name: 'jQuery', involvement: 3, usage: 3 },\n  { name: 'MS SQL', involvement: 3, usage: 3 },\n  { name: 'Microsoft Visual Studio', involvement: 3, usage: 3 }\n];\n","export const from = '2015-01-01';\n\nexport const to = '2018-06-30';\n\nexport const customerName = 'Thomas Cook NE';\n\nexport const customerDescription = 'Thomas Cook Group är en av världens största arrangörer av nöjesresor. I koncernen ingår bl.a. researrangörerna Ving, Spies, Tjäreborg, Globetrotter, flygbolaget Thomas Cook Airlines Scandinavia och hotellkedjan Sunwing Family Resorts. Thomas Cook Group har 22 000 anställda i 15 länder, 20 miljoner kunder och en omsättning på närmare 90 miljarder kronor.';\n\nexport const industry = 'E-Handel';\n\nexport const projectName = 'Responsive website redesign';\n\nexport const projectDescription = 'Thomas Cook Northern Europe ville ha förstärkning till deras projektgrupp som jobbade med att designa om Ving.se, Ving.no, Spies och Tjäreborg för att göra hemsidan mer mobilvänlig. De ville göra den responsiv, mer användaranpassad och lättöverskådlig för att underlätta för användarna.';\n\nexport const roles = [\n  {\n    name: 'Fullstackutveklare',\n    description: 'Christoffer utvärderade två webramverk för att hjälpa Thomas cook bestämma vilket man skulle satsa på framåt. Tillsammans med en kollega utvecklade han samma prototyp i båda verktygen för att sedan sammanfatta för och nackdelar tillsammans med en rekomendation till thomas cooks webansvariga samt arkitekt. Det ledde till ett beslut att börja utveckla mikrotjänster i ReactJS för ving.se, ving.no, spies.dk och tjareborg.fi. Han arbetae därefter med att ta fram en utvecklar guide och pressentera designförslag till övriga webteam för att få en likadan bild kring hur dessa tjänster skulle byggas.',\n  },\n  {\n    name: 'Workshopledare',\n    description: 'Startade ett arbete med att ta fram en style-guide bestående av ett komponent bibliotek i react tillsammans med en web app för att visa hur dessa ser ut och ska användas. Arbetet är fortgående men har gjort att beställningar från designers och kravspecifikationer på sidor har kunnat förenklas. Samt förenklat för webutveklare som nu kan använda färdiga komponenter för  tjänstyerna istället för att hela tiden bygga egna. Det underlättar även komunikationen mellan designer och utveklare när man kan prata i gemensamma termer om de olika komponenter som finns. Arbetet bestod mycket i att se till att alla utveklare var med och bidrog till biblioteket genom ett antal halvdagar där man arbetade i grupper kring enkla komponenter och utvärderade design och API tillsammans i slutet av dagen. Detta för att alla skulle känna sig bekväma i att bygga vidare på biblioteket.',\n  },\n  {\n    name: 'Systemutvecklare',\n    description: [\n      'Christoffer var även med i en liten grupp som började ta fram ett nytt gemensamt API för webben bestånde av ett graphQL API. Anledningen till att man ville göra detta var att man upplevde att teamen skrev ett eget API för varje tjänst man gjorde och att det fanns en hel del redundans i dessa. Utöver att det innebar extra arbete för teamen att skriva om samma typ av API gång på gång så ansåg man att det var en risk att exponera data i så många API:er eftersom det blir svårare att ha koll på vilket data man kan komma åt var. Det fanns även ett behov att gemensamt lösa cachning för webben på ett bättre sätt än att alla team gör på ett eget sätt.',\n      'Teamet bestående av till största del 3 personer byggde därför ett graphQL API med ett eget ramverk för att hämta data från underliggande tjänster med möjlighet att styra cachning i en configurering för varje typ av data. Cachning valde man att från början ha i en SQL inmemory databas för att det redan fanns på plats och därför var enkelt att börja använda men mot slutet av projektet lades det även till ett cachelager för redis.',\n      'API:t gjorde att flertalet sidor på webben kunde byggas om betydligt snabbare än tidigare på grund av att datat till stor utsträckning kunde cachas. Samt att man kunde bygga en bra monitorering kring API:t med gemensamma grafer för till exempel svarstider och fel som inträffat i Kibana.',\n    ],\n  },\n];\n\nexport const keywords = [\n  { name: 'React', involvement: 5, usage: 5 },\n  { name: 'Node', involvement: 5, usage: 5 },\n  { name: 'Redux', involvement: 5, usage: 5 },\n  { name: 'Redux-saga', involvement: 5, usage: 5 },\n  { name: 'Express', involvement: 5, usage: 5 },\n  { name: 'GraphQL', involvement: 5, usage: 4 },\n  { name: 'Apollo-client', involvement: 5, usage: 4 },\n  { name: 'Jenkins', involvement: 5, usage: 5 },\n  { name: 'Kibana', involvement: 5, usage: 5 },\n  { name: 'Elasticsearch', involvement: 5, usage: 5 },\n  { name: 'MS SQL', involvement: 3, usage: 3 },\n  { name: 'Redis', involvement: 3, usage: 3 },\n  { name: 'RabbitMQ', involvement: 3, usage: 3 },\n  { name: 'TFS', involvement: 3, usage: 3 },\n  { name: '.Net', involvement: 5, usage: 5 },\n  { name: 'C#', involvement: 5, usage: 5 },\n  { name: 'Github', involvement: 5, usage: 5 },\n];","import * as belivia from './belivia/sv';\nimport * as ipOnly from './ip-only/sv';\nimport * as chemicalInspection from './kemikalieinspektionen/sv';\nimport * as scania from './scania/sv';\nimport * as scaniaInfomate from './scania-infomate/sv';\nimport * as thomasCook from './thomas-cook/sv';\n\nexport const list = [\n  belivia,\n  ipOnly,\n  chemicalInspection,\n  scania,\n  scaniaInfomate,\n  thomasCook,\n];\n\nexport const title = 'Erfarenhet';\n\nexport const onGoing = 'Pågående';\n","export const from = '2014-11-01';\n\nexport const to = '2014-12-31';\n\nexport const customerName = 'Belivia';\n\nexport const customerDescription = 'Belivia is a company working on risk assessment for insurance companies. Part of their product is a electronic health declaration. The health declaration can be tailored to fit the need for different insurance policies by uploading scripts using their own format and the dynamically render the questionnaire to the user.';\n\nexport const industry = 'Insurance';\n\nexport const projectName = 'E-health';\n\nexport const projectDescription = 'Upon selling their solution for health declarations to a large swedish insurance company they had to increase security on their application. Data had to be encrypted on disk and participants had to be able to sign their forms using BankId. They therefore decided to rewrite their application in .Net instead of the current PHP.';\n\nexport const roles = [\n  {\n    name: 'System developer .Net',\n    description: 'I was one of two developers on the project and worked on all parts of the new application. What I learned during this short project was how to integrate with the BankId API, how to handle encryption with rotating keys in the data access layer and how to go through a external security audit.',\n  },\n];\n\nexport const keywords = [\n  { name: '.Net', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'Entity Framework', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'javascript', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'MVC', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'TFS', involvement: 2, usage: 5, category: 'Hosting/CI/CD' },\n  { name: 'Azure', involvement: 1, usage: 5, category: 'Hosting/CI/CD' },\n  { name: 'BankId', involvement: 3, usage: 3, category: 'Other' },\n];","export const from = '2018-12-01';\n\nexport const to = null;\n\nexport const customerName = 'Global Connect/IP-Only';\n\nexport const industry = 'Infrastructure';\n\nexport const projectName = 'Digitization';\n\nexport const customerDescription = 'Global Connect/IP-Only builds and operates one of Swedens largest and neutral fiber networks. Their business model is to empower digitization by owning, developing and offering the best infrastructure and low level services for the digital society.';\n\nexport const projectDescription = 'The focus of the project was to develop both customer facing and internal it-systems. Before the project started different parts of the company worked mostly in their own defined processes and tool. The tools could be bought systems but mostly excel and email was used to handle sales and deliveries. The aim was to to document all core processes through the different parts of the company and set up integrations and build new systems to make work faster, easier and less error prone.';\n\nexport const roles = [\n  {\n    name: 'System developer .NET',\n    description: 'I started the project as a backend .Net developer working with business sales support. IP-Only had just merged with another company called DGC and had inherited some .Net systems for searching connectivity options for addresses and some tools used for deliveries in the Network acquired from DGC. The main issues with this project was that these systems where in bad shape and lacked documentation. Quickly after starting the project I lifted the issue and proposed building new requirements in the IP-Only stack and develop a new module in the legacy system to benefit from everything done in the IP-Only tech stack. This finally led to so much of the functions used being in the IP-Only stack that we decided to build the UI and missing logic there as well and deprecate the old system. The value gained from this was a more reliable system and also the entire IT development department has the competence needed to fix bugs and monitor the system instead of having a single person responsible for all of this.',\n  },\n  {\n    name: 'Full stack developer Java/AngularJS',\n    description: 'As the project progressed the role became more and more a Java/AngularJS fullstack developer continuing to build a customer portal where enterprise customers could log in by themself and search for network options for their locations. This new customer facing feature was built upon the engine for search described in the previous role. And had a angular frontend for managing addresses, products and so on. This system was integrated with a new self developed product catalog and a back-office ui to manage all products. This led to a faster way for customers to get quotes, often automatic replies, on buying new products.',\n  },\n  {\n    name: 'Full stack developer Java/AngularJS',\n    description: 'When the first version of the customer portal was released I felt that I wanted to try something new and as a result the Client agreed to move me from the sales support team to the operational support team. There I started working in a developing team with a lot of work dependent on just one team member. I worked close together with the project manager to develop I working development process and implement most of the scrum model. This new role had a few different goals, set up a back-office application for reserving and finding network identifiers of different forms. Providing data for a new Service Now integration as well as setting up API:s to fetch data from Service now API:s. And unifying the stack used to monitor the 2 recently merged networks. What I take away from this role os more of the soft skills I developed. Coaching new team-members. Introducing to stake holders what a sprint demo is and doing a lot of them and so on.',\n  },\n];\n\nexport const keywords = [\n  { name: 'Java', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'Spring Boot', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'Docker Swarm', involvement: 2, usage: 5, category: 'Hosting/CI/CD' },\n  { name: '.Net', involvement: 5, usage: 3, category: 'Language/Framework' },\n  { name: 'C#', involvement: 5, usage: 3, category: 'Language/Framework' },\n  { name: 'Octopus', involvement: 3, usage: 1, category: 'Hosting/CI/CD' },\n  { name: 'Gitlab', involvement: 4, usage: 5, category: 'Hosting/CI/CD' },\n  { name: 'Teamcity', involvement: 3, usage: 1, category: 'Hosting/CI/CD' },\n  { name: 'MariaDB', involvement: 3, usage: 5, category: 'Database' },\n  { name: 'MS SQL', involvement: 4, usage: 4, category: 'Database' },\n  { name: 'Kibana', involvement: 4, usage: 4, category: 'Monitoring' },\n  { name: 'Elasticsearch', involvement: 4, usage: 4, category: 'Database' },\n  { name: 'Grafana', involvement: 3, usage: 3, category: 'Monitoring' },\n  { name: 'AngularJS', involvement: 3, usage: 5, category: 'Language/Framework' },\n  { name: 'Nginx', involvement: 3, usage: 5, category: 'Other' },\n  { name: 'ArchiMate', involvement: 3, usage: 5, category: 'Language/Framework' },\n  { name: 'Archi', involvement: 3, usage: 5, category: 'Tools' },\n  { name: 'RabbitMQ', involvement: 4, usage: 5, category: 'Other' },\n  { name: 'IntelliJ', involvement: 4, usage: 5, category: 'Tools' },\n  { name: 'DataGrip', involvement: 4, usage: 5, category: 'Tools' },\n];","export const from = '2015-01-01';\n\nexport const to = '2018-06-30';\n\nexport const customerName = 'Thomas Cook NE';\n\nexport const customerDescription = 'Thomas Cook Group is one of the world\\'s largest organizers of charter trips. The group includes i.a. the tour operators Ving, Spies, Tjäreborg, Globetrotter, the airline Thomas Cook Airlines Scandinavia and the hotel chain Sunwing Family Resorts. Thomas Cook Group has 22,000 employees in 15 countries, 20 million customers and a turnover of almost SEK 90 billion.';\n\nexport const industry = 'E-commerce';\n\nexport const projectName = 'Responsive website redesign';\n\nexport const projectDescription = 'Thomas Cook Northern Europe wanted reinforcement for their project group that worked on redesigning Ving.se, Ving.no, Spies and Tjäreborg to make the website more mobile-friendly. They wanted to make it responsive, more user-friendly and easier to understand for the convenience of their users.';\n\nexport const roles = [\n  {\n    name: 'Full stack developer',\n    description: 'I was originally intended to be a back-end .Net developer bu I was put in a team that had just built a Node.JS API with a AngularJS front-end. Before starting their next project I was tasked with comparing the new angular version and ReactJS. To do this I tried building a small application in both frameworks and talking to my Netlight colleges at SVT who had used React for a while. I proposed to switch to React which we did and it worked out great. I still feel that I like working in React better than Angular even with the newer versions. We then continued to build smaller services for their webpage using Node/Express API:s and React front-end apps.'\n  },\n  {\n    name: 'Workshop leader',\n    description: 'When we had started to build more of the React applications for our web. We started to notice the need for a component library and common styles to use in our applications. I started pushing for us taking after e.g. Airbnb and make a style guide with components that can be reused and to publish all of these both as a npm package and as a webpage with examples and code snippets. Me and a college decided to boot strap this with a workshop for all teams working on the web. We set up a basic repository, had a short introduction, divided up groups with people from different teams and assigned them with building one component each and also an example page where they could be used. They then spread out and started working from their own ideas and we as workshop leaders moved around to each groups and checked if anyone needed help pr input from us. The package was well received in all teams and all was included in an early stage in creating the package and components. It was important to us that all web developers where comfortable making changes and adding new components in the library since it would otherwise become more of an obstacle than a helpful tool. When I left thomas cook this project was still going strong and had a large impact on the pace we could develop new applications and still keep a coherent ui.',\n  },\n  {\n    name: 'Full stack developer GraphQL',\n    description: [\n      'I was trusted with more and more responsibilities at Thomas Cook and when a colleague and me started to discuss the potential of setting up a GraphQL API for the web we got an ok to test it out on a small application. The reason to try it was that we had seen that there was much time going in to writing API:s for similar API:s again and again across the company e.g. text data from our CMS and facts for hotels. We also had a need to figure out how to handle caching for our API:s to make our API calls run faster when possible.',\n      'We started of as a team of 3 and worked on this and we started to set up our own framework for fetching data from different sources such as cache, api:s and databases. This was not available out of the box in Apollo server at the time this was built, which it to a lare portion is today. Our first version of caching was set up using a MS SQL in memory database as a key value store. We wanted to use Redis but there was some hosting issues needing sorting out before hand. We therefore used our SQL database in using the same kind of methods available on Redis to make swapping them out later on easier. Towards the end of the project we also got access to a Redis instance and could make the switch.',\n      'The new API made using data from other teams easier as well as providing us with useful data on response times for different types of data. We also tried setting up Apollo client directly on top of React but found it was not easy to build the same functionality that we where used to build using redux and redux-saga. So we ended up just using it in out data access layer at the client and keeping our shared application data in redux as it was previously done.',\n    ],\n  },\n];\n\nexport const keywords = [\n  { name: 'React', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'Node', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'Redux', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'Redux-saga', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'Express', involvement: 5, usage: 5, category: 'Language/Framework' },\n  { name: 'GraphQL', involvement: 5, usage: 4, category: 'Language/Framework' },\n  { name: 'Apollo-client', involvement: 5, usage: 4, category: 'Language/Framework' },\n  { name: 'Jenkins', involvement: 5, usage: 5, category: 'Hosting/CI/CD' },\n  { name: 'Kibana', involvement: 5, usage: 5, category: 'Monitoring' },\n  { name: 'Elasticsearch', involvement: 5, usage: 5, category: 'Database' },\n  { name: 'MS SQL', involvement: 3, usage: 3, category: 'Database' },\n  { name: 'Redis', involvement: 3, usage: 3, category: 'Database' },\n  { name: 'RabbitMQ', involvement: 3, usage: 3, category: 'Other' },\n  { name: 'TFS', involvement: 3, usage: 3, category: 'Hosting/CI/CD' },\n  { name: '.Net', involvement: 4, usage: 4, category: 'Language/Framework' },\n  { name: 'C#', involvement: 4, usage: 4, category: 'Language/Framework' },\n  { name: 'Github', involvement: 5, usage: 5, category: 'Hosting/CI/CD' },\n];\n","import * as belivia from './belivia/en';\nimport * as ipOnly from './ip-only/en';\nimport * as thomasCook from './thomas-cook/en';\n\nexport const list = [\n  belivia,\n  ipOnly,\n  thomasCook,\n];\n\nexport const title = 'Experience';\n\nexport const onGoing = 'Ongoing';\n","import * as sv from './sv.js';\nimport * as en from './en.js';\n\nconst mapAndSortList = (list) => {\n  return list.map(project => ({\n    ...project,\n    keywords: project.keywords.map(keyword => ({ ...keyword, score: keyword.involvement * keyword.usage}))\n      .sort((a, b) => {\n        if (a.score > b.score) {\n          return -1;\n        }\n        if (a.score < b.score) {\n          return 1;\n        }\n        if (a.involvement > b.involvement) {\n          return -1;\n        }\n        if (a.involvement < b.involvement) {\n          return 1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n      })\n  })).sort((a, b) => {\n    if (a.to < b.to) {\n      return 1;\n    }\n    if (a.to > b.to) {\n      return -1;\n    }\n    if (a.from < b.from) {\n      return 1;\n    }\n    if (a.from > b.from) {\n      return -1;\n    }\n    return 0;\n  });\n}\n\nexport default {\n  sv: {\n    ...sv,\n    list: mapAndSortList(sv.list),\n  },\n  en: {\n    ...en,\n    list: mapAndSortList(en.list),\n  },\n};\n","export const name = 'Christoffer Nilsson';\n\nexport const personal = 'I am the kind of person who really loves my job, I spend a lot of my free time programming things for fun or reading blogs. A part from my job I like to spend time with my family, my girlfriend a recently graduated teacher and our 3 years old son. I also follow a lot of sports for example golf, which I also (try to) play myself, hockey and some football.';\n\nexport const professional = 'It is important for me to have a good relationship with the people I work with. In the teams where I have worked for longer time preiods I tend to end up in a role where I handle much of the communication with stakeholders, architects and users. It is a role I like to have since it is a good compromise between writing code and having a higher order of understanding.';\n\nexport const favoriteProject = 'The project that I am most proud of having been a part of is the one at Thomas Cook. I worked in a very inspiring team and was trusted with a lot of responsibility even though I was the only consultant on the team. The journey we did from a monolithic .Net application to more of a \"microservice\" architecture with modern tech stack and continuous delivery has given me a good confidence on what is possible to achieve if you set your mind to it.';","import * as en from './en';\n\nexport default {\n  en,\n};\n","export const list = [\n  {\n    institute: 'Royal institute of technology',\n    title: 'Master of science program for Computer science',\n    from: '2008-09-01',\n    to: '2014-09-01',\n  },\n  {\n    institute: 'Technical University of Munich',\n    title: 'Exchange semester, computer science program',\n    from: '2013-09-01',\n    to: '2013-12-20',\n  },\n  {\n    institute: 'Amf1 Berga',\n    title: 'Military service, combat boat driver',\n    from: '2009-09-01',\n    to: '2010-06-20',\n  },\n];\n\nexport const title = 'Education';\n","import * as en from './en';\n\nexport default {\n  en: en,\n  sv: en,\n};\n","import experience from './experience';\nimport personal from './personal';\nimport education from './education';\n\nexport default {\n  sv: {\n    experience: experience.sv,\n    personal: personal.en,\n    skills: {\n      title: 'Nyckelord',\n      description: 'Samma som finns med ovan, bara grupperade på ett annat sätt.',\n    },\n    education: education.sv,\n  },\n  en: {\n    experience: experience.en,\n    personal: personal.en,\n    skills: {\n      title: 'Keywords',\n      description: 'These are the same keywords as highlighted above. Just grouped for an easier overview.',\n    },\n    education: education.en,\n  }\n};\n","import React from 'react';\n\nimport './education-entry.css';\n\nfunction EducationEntry({ entry }) {\n  return (\n    <div className=\"education-entry\">\n      <div className=\"education-entry__title\">\n        <div className=\"education-entry__institute\">{entry.institute}</div>\n        <div className=\"education-entry__name\">{entry.title}</div>\n      </div>\n      <div className=\"education-entry__duration\">\n        <div className=\"education-entry__from\">{entry.from}</div>\n        <div className=\"education-entry__to\">{entry.to}</div>\n      </div>\n    </div>\n  )\n};\n\nexport default EducationEntry;\n","import React from 'react';\n\nimport './education-list.css';\nimport EducationEntry from \"./education-entry\";\n\nfunction EducationList({ list }) {\n  return (\n    <div className=\"education-list\">\n      {list.map(entry => (\n        <div className=\"education-list__entry\" key={entry.title}>\n          <EducationEntry entry={entry} />\n        </div>\n      ))}\n    </div>\n  )\n};\n\nexport default EducationList;\n","import ExperienceList from \"./experience/experience-list\";\nimport Personal from './personal/personal';\nimport Skills from './skills/skills';\nimport data from '../data';\n\nimport './index.css';\nimport EducationList from \"./education/education-list\";\n\nconst Resume = function() {\n  return (\n    <div className=\"main\">\n      <a href=\"/christoffer-nilsson-en.pdf\" target=\"_blank\">Download my eBook</a>\n      <Personal personal={data.en.personal} />\n      <h2 className=\"main__section-title\">{data.en.experience.title}</h2>\n      <ExperienceList experiences={data.en.experience.list} labels={{ onGoing: data.en.experience.onGoing }} />\n      <h2 className=\"main__section-title\">{data.en.education.title}</h2>\n      <EducationList list={data.en.education.list} />\n      <h2 className=\"main__section-title\">{data.en.skills.title}</h2>\n      <p>{data.en.skills.description}</p>\n      <Skills experiences={data.en.experience.list} />\n    </div>\n  )\n}\n\nexport default Resume;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Resume from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Resume />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}